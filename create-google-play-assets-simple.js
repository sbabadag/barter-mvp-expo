const fs = require('fs');
const path = require('path');

function createGooglePlayAssets() {
  console.log('üì± Google Play Store varlƒ±klarƒ± hazƒ±rlanƒ±yor...');
  
  // Create google-play-assets directory
  const googlePlayDir = path.join(__dirname, 'google-play-assets');
  if (!fs.existsSync(googlePlayDir)) {
    fs.mkdirSync(googlePlayDir, { recursive: true });
  }
  
  // Copy current icon as reference
  if (fs.existsSync('assets/icon.png')) {
    fs.copyFileSync('assets/icon.png', path.join(googlePlayDir, 'original-icon.png'));
    console.log('‚úÖ Mevcut icon kopyalandƒ±: google-play-assets/original-icon.png');
  }
  
  // Create HTML tool for icon conversion
  const iconConverterHTML = `
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Google Play Icon Converter</title>
    <style>
        body { font-family: Arial, sans-serif; padding: 20px; max-width: 800px; margin: 0 auto; }
        .tool { border: 1px solid #ddd; padding: 20px; margin: 20px 0; border-radius: 8px; }
        canvas { border: 1px solid #ccc; margin: 10px 0; }
        .download-btn { background: #4CAF50; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; margin: 5px; }
        .download-btn:hover { background: #45a049; }
        input[type="file"] { margin: 10px 0; }
        .preview { display: flex; gap: 20px; align-items: center; flex-wrap: wrap; }
    </style>
</head>
<body>
    <h1>üé® Google Play Store Icon Converter</h1>
    
    <div class="tool">
        <h2>üì± App Icon Converter (512x512)</h2>
        <p>Google Play Store i√ßin 512x512 PNG icon olu≈ütur (alpha channel olmadan)</p>
        <input type="file" id="iconInput" accept="image/*">
        <div class="preview">
            <div>
                <h4>Orijinal</h4>
                <canvas id="originalCanvas" width="256" height="256"></canvas>
            </div>
            <div>
                <h4>512x512 (Google Play)</h4>
                <canvas id="playStoreCanvas" width="256" height="256"></canvas>
                <br>
                <button class="download-btn" onclick="downloadPlayStoreIcon()">ƒ∞ndir (512x512)</button>
            </div>
        </div>
    </div>
    
    <div class="tool">
        <h2>üéØ Feature Graphic Creator (1024x500)</h2>
        <p>Google Play Store banner i√ßin feature graphic olu≈ütur</p>
        <div>
            <label>App Adƒ±: <input type="text" id="appName" value="ESKICI" style="padding: 5px; margin: 5px;"></label><br>
            <label>Alt Ba≈ülƒ±k: <input type="text" id="subtitle" value="Takas ve ƒ∞kinci El Platformu" style="padding: 5px; margin: 5px; width: 300px;"></label><br>
            <label>√ñzellikler: <input type="text" id="features" value="‚Ä¢ G√ºvenli Takas ‚Ä¢ AI Destekli ‚Ä¢ Kolay Kullanƒ±m" style="padding: 5px; margin: 5px; width: 400px;"></label><br>
            <button class="download-btn" onclick="createFeatureGraphic()">Feature Graphic Olu≈ütur</button>
        </div>
        <div>
            <h4>Feature Graphic (1024x500)</h4>
            <canvas id="featureCanvas" width="512" height="250" style="max-width: 100%;"></canvas>
            <br>
            <button class="download-btn" onclick="downloadFeatureGraphic()">Feature Graphic ƒ∞ndir</button>
        </div>
    </div>
    
    <div class="tool">
        <h2>üìã Asset Checklist</h2>
        <ul>
            <li>‚úÖ App Icon (512x512 PNG) - Bu ara√ßla olu≈ütur</li>
            <li>‚úÖ Feature Graphic (1024x500) - Bu ara√ßla olu≈ütur</li>
            <li>‚è≥ Screenshots (2-8 adet telefon, 1-8 adet tablet)</li>
            <li>‚è≥ App A√ßƒ±klamasƒ± (T√ºrk√ße, max 4000 karakter)</li>
            <li>‚è≥ Kƒ±sa A√ßƒ±klama (max 80 karakter)</li>
            <li>‚è≥ Privacy Policy URL</li>
            <li>‚è≥ Terms of Service URL</li>
        </ul>
    </div>

    <script>
        let originalImage = null;
        
        document.getElementById('iconInput').addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(event) {
                    const img = new Image();
                    img.onload = function() {
                        originalImage = img;
                        drawOriginal();
                        createPlayStoreIcon();
                    };
                    img.src = event.target.result;
                };
                reader.readAsDataURL(file);
            }
        });
        
        function drawOriginal() {
            const canvas = document.getElementById('originalCanvas');
            const ctx = canvas.getContext('2d');
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            ctx.drawImage(originalImage, 0, 0, 256, 256);
        }
        
        function createPlayStoreIcon() {
            if (!originalImage) return;
            
            const canvas = document.getElementById('playStoreCanvas');
            const ctx = canvas.getContext('2d');
            
            // Clear and fill with white background (remove alpha channel)
            ctx.fillStyle = 'white';
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            
            // Draw the icon
            ctx.drawImage(originalImage, 0, 0, 256, 256);
        }
        
        function downloadPlayStoreIcon() {
            if (!originalImage) {
                alert('√ñnce bir icon y√ºkleyin!');
                return;
            }
            
            // Create a 512x512 canvas for actual download
            const canvas = document.createElement('canvas');
            canvas.width = 512;
            canvas.height = 512;
            const ctx = canvas.getContext('2d');
            
            // White background (no alpha channel)
            ctx.fillStyle = 'white';
            ctx.fillRect(0, 0, 512, 512);
            
            // Draw the icon
            ctx.drawImage(originalImage, 0, 0, 512, 512);
            
            // Download
            canvas.toBlob(function(blob) {
                const url = URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'app-icon-512.png';
                a.click();
                URL.revokeObjectURL(url);
            });
        }
        
        function createFeatureGraphic() {
            const canvas = document.getElementById('featureCanvas');
            const ctx = canvas.getContext('2d');
            
            // Dimensions for display (will be scaled up for download)
            canvas.width = 512;
            canvas.height = 250;
            
            // Create gradient background
            const gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);
            gradient.addColorStop(0, '#439BEB');
            gradient.addColorStop(0.5, '#4FFFB0');
            gradient.addColorStop(1, '#FFD700');
            
            ctx.fillStyle = gradient;
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            
            // Add text
            const appName = document.getElementById('appName').value;
            const subtitle = document.getElementById('subtitle').value;
            const features = document.getElementById('features').value;
            
            // App name
            ctx.fillStyle = 'white';
            ctx.font = 'bold 36px Arial';
            ctx.textAlign = 'center';
            ctx.strokeStyle = 'rgba(0,0,0,0.3)';
            ctx.lineWidth = 2;
            ctx.strokeText(appName, canvas.width/2, 75);
            ctx.fillText(appName, canvas.width/2, 75);
            
            // Subtitle
            ctx.font = '18px Arial';
            ctx.fillStyle = 'rgba(255,255,255,0.9)';
            ctx.fillText(subtitle, canvas.width/2, 110);
            
            // Features
            ctx.font = '12px Arial';
            ctx.fillStyle = 'rgba(255,255,255,0.8)';
            ctx.fillText(features, canvas.width/2, 140);
        }
        
        function downloadFeatureGraphic() {
            // Create full-size 1024x500 canvas
            const canvas = document.createElement('canvas');
            canvas.width = 1024;
            canvas.height = 500;
            const ctx = canvas.getContext('2d');
            
            // Create gradient background
            const gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);
            gradient.addColorStop(0, '#439BEB');
            gradient.addColorStop(0.5, '#4FFFB0');
            gradient.addColorStop(1, '#FFD700');
            
            ctx.fillStyle = gradient;
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            
            // Add text with proper scaling
            const appName = document.getElementById('appName').value;
            const subtitle = document.getElementById('subtitle').value;
            const features = document.getElementById('features').value;
            
            // App name
            ctx.fillStyle = 'white';
            ctx.font = 'bold 72px Arial';
            ctx.textAlign = 'center';
            ctx.strokeStyle = 'rgba(0,0,0,0.3)';
            ctx.lineWidth = 4;
            ctx.strokeText(appName, canvas.width/2, 150);
            ctx.fillText(appName, canvas.width/2, 150);
            
            // Subtitle
            ctx.font = '36px Arial';
            ctx.fillStyle = 'rgba(255,255,255,0.9)';
            ctx.fillText(subtitle, canvas.width/2, 220);
            
            // Features
            ctx.font = '24px Arial';
            ctx.fillStyle = 'rgba(255,255,255,0.8)';
            ctx.fillText(features, canvas.width/2, 280);
            
            // Download
            canvas.toBlob(function(blob) {
                const url = URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'feature-graphic-1024x500.png';
                a.click();
                URL.revokeObjectURL(url);
            });
        }
        
        // Initialize feature graphic
        createFeatureGraphic();
    </script>
</body>
</html>
  `;
  
  fs.writeFileSync(path.join(googlePlayDir, 'icon-converter.html'), iconConverterHTML);
  console.log('‚úÖ Icon converter olu≈üturuldu: google-play-assets/icon-converter.html');
  
  // Create app descriptions in Turkish
  const appDescriptions = {
    app_title: "ESKICI - Takas ve ƒ∞kinci El",
    short_description: "G√ºvenli takas platformu. AI destekli √ºr√ºn tanƒ±ma, kolay kullanƒ±m, g√ºvenilir alƒ±≈üveri≈ü.",
    full_description: `üîÑ ESKICI - T√ºrkiye'nin En G√ºvenilir Takas Platformu

ESKƒ∞Cƒ∞ ile e≈üyalarƒ±nƒ±zƒ± g√ºvenle takas edin, ikinci el alƒ±≈üveri≈üin keyfini √ßƒ±karƒ±n!

‚ú® √ñNE √áIKAN √ñZELLƒ∞KLER:
‚Ä¢ ü§ñ AI Destekli √úr√ºn Tanƒ±ma - Fotoƒüraf √ßekin, √ºr√ºn bilgileri otomatik dolsun
‚Ä¢ üí¨ G√ºvenli Mesajla≈üma - Satƒ±cƒ±larla doƒürudan ileti≈üim kurun
‚Ä¢ üì± Kolay Kullanƒ±m - Sezgisel tasarƒ±m ile hƒ±zlƒ± alƒ±≈üveri≈ü
‚Ä¢ üîí G√ºvenilir Sistem - Kullanƒ±cƒ± puanlama ve deƒüerlendirme sistemi
‚Ä¢ üìç Konum Bazlƒ± - Yakƒ±nƒ±nƒ±zdaki fƒ±rsatlarƒ± ke≈üfedin
‚Ä¢ üí∞ Teklif Sistemi - Pazarlƒ±k yapƒ±n, en iyi fiyatƒ± yakalayƒ±n

üõçÔ∏è NASIL √áALI≈ûIR:
1. Satmak istediƒüiniz √ºr√ºn√º fotoƒüraflayƒ±n
2. AI ile √ºr√ºn bilgileri otomatik tamamlansƒ±n
3. Fiyat belirleyin ve yayƒ±nlayƒ±n
4. Teklifleri alƒ±n ve mesajla≈üƒ±n
5. G√ºvenle takas edin!

üå± S√úRD√úR√úLEBILIR YA≈ûAM:
‚Ä¢ √áevre dostu alƒ±≈üveri≈ü
‚Ä¢ Atƒ±klarƒ± azaltƒ±n, geri d√∂n√º≈ü√ºm√º destekleyin
‚Ä¢ B√ºt√ße dostu se√ßenekler
‚Ä¢ Yerel ekonomiye katkƒ±

üìä KATEGORƒ∞LER:
‚Ä¢ Elektronik ‚Ä¢ Giyim ‚Ä¢ Ev & Bah√ße ‚Ä¢ Spor & Outdoor
‚Ä¢ Kitap & Dergi ‚Ä¢ Oyuncak & Bebek ‚Ä¢ Aksesuar ‚Ä¢ Antika
‚Ä¢ M√ºzik & Hobi ‚Ä¢ Kozmetik ‚Ä¢ Ve daha fazlasƒ±...

üéØ HEDEF Kƒ∞TLE:
‚Ä¢ S√ºrd√ºr√ºlebilir ya≈üam sevenler
‚Ä¢ Ekonomik alƒ±≈üveri≈ü yapanlar
‚Ä¢ Teknoloji meraklƒ±larƒ±
‚Ä¢ √áevre bilin√ßli kullanƒ±cƒ±lar

üìû DESTEK:
7/24 m√º≈üteri desteƒüi ve kullanƒ±cƒ± dostu aray√ºz ile sorunsuz deneyim.

Hemen indirin ve ESKƒ∞Cƒ∞ topluluƒüuna katƒ±lƒ±n! üöÄ`,
    
    keywords: [
      "takas", "ikinci el", "alƒ±≈üveri≈ü", "satƒ±≈ü", "AI", "yapay zeka",
      "g√ºvenli", "pazarlƒ±k", "teklif", "mesajla≈üma", "s√ºrd√ºr√ºlebilir",
      "√ßevre dostu", "geri d√∂n√º≈ü√ºm", "ekonomik", "yerel", "topluluk"
    ],
    
    category: "Shopping",
    content_rating: "Everyone",
    target_audience: "13+",
    
    what_is_new: `üîÑ Yeni S√ºr√ºm - v1.3.1

‚ú® Yenilikler:
‚Ä¢ ü§ñ Geli≈ütirilmi≈ü AI √ºr√ºn tanƒ±ma sistemi
‚Ä¢ üì± Yeni kullanƒ±cƒ± aray√ºz√º tasarƒ±mƒ±
‚Ä¢ üí¨ Hƒ±zlandƒ±rƒ±lmƒ±≈ü mesajla≈üma sistemi
‚Ä¢ üîí Artƒ±rƒ±lmƒ±≈ü g√ºvenlik √∂nlemleri
‚Ä¢ üìç Otomatik konum tanƒ±ma √∂zelliƒüi
‚Ä¢ üé® Yeni marka kimliƒüi ve iconlar

üêõ Hata D√ºzeltmeleri:
‚Ä¢ Mesajla≈üma sorunlarƒ± giderildi
‚Ä¢ Performans iyile≈ütirmeleri
‚Ä¢ Uygulama kararlƒ±lƒ±ƒüƒ± artƒ±rƒ±ldƒ±

Geribildirimleriniz i√ßin te≈üekk√ºrler! üôè`
  };
  
  fs.writeFileSync(
    path.join(googlePlayDir, 'app-descriptions.json'),
    JSON.stringify(appDescriptions, null, 2)
  );
  console.log('‚úÖ App a√ßƒ±klamalarƒ± hazƒ±rlandƒ±: google-play-assets/app-descriptions.json');
  
  // Create privacy policy content
  const privacyPolicy = `# ESKICI - Gizlilik Politikasƒ±

## 1. Toplanan Bilgiler
‚Ä¢ Hesap bilgileri (email, isim, profil fotoƒürafƒ±)
‚Ä¢ √úr√ºn bilgileri ve fotoƒüraflarƒ±
‚Ä¢ Mesajla≈üma i√ßerikleri
‚Ä¢ Konum bilgileri (isteƒüe baƒülƒ±)
‚Ä¢ Uygulama kullanƒ±m verileri

## 2. Bilgilerin Kullanƒ±mƒ±
‚Ä¢ Hizmet saƒülamak ve iyile≈ütirmek
‚Ä¢ Kullanƒ±cƒ±lar arasƒ± ileti≈üimi saƒülamak
‚Ä¢ G√ºvenlik ve dolandƒ±rƒ±cƒ±lƒ±k √∂nleme
‚Ä¢ M√º≈üteri desteƒüi saƒülamak

## 3. Bilgi Payla≈üƒ±mƒ±
‚Ä¢ Bilgileriniz √º√ß√ºnc√º taraflarla satƒ±lmaz
‚Ä¢ Sadece hizmet saƒülamak i√ßin gerekli durumlarda payla≈üƒ±lƒ±r
‚Ä¢ Yasal zorunluluklar hari√ß

## 4. Veri G√ºvenliƒüi
‚Ä¢ SSL ≈üifreleme ile g√ºvenli veri transferi
‚Ä¢ D√ºzenli g√ºvenlik g√ºncellemeleri
‚Ä¢ Eri≈üim kontrol√º ve kimlik doƒürulama

## 5. Kullanƒ±cƒ± Haklarƒ±
‚Ä¢ Verilerinizi g√∂r√ºnt√ºleme hakkƒ±
‚Ä¢ Verilerin d√ºzeltilmesi talebi
‚Ä¢ Hesap silme ve veri silinmesi hakkƒ±

ƒ∞leti≈üim: privacy@eskici.com`;

  fs.writeFileSync(path.join(googlePlayDir, 'privacy-policy.md'), privacyPolicy);
  console.log('‚úÖ Gizlilik politikasƒ± hazƒ±rlandƒ±: google-play-assets/privacy-policy.md');
  
  // Create terms of service
  const termsOfService = `# ESKICI - Kullanƒ±m ≈ûartlarƒ±

## 1. Hizmet Tanƒ±mƒ±
ESKICI, kullanƒ±cƒ±lar arasƒ±nda ikinci el e≈üya alƒ±m-satƒ±m ve takas platformudur.

## 2. Kullanƒ±cƒ± Sorumluluklarƒ±
‚Ä¢ Doƒüru bilgi payla≈ümak
‚Ä¢ Yasalara uygun davranmak
‚Ä¢ Diƒüer kullanƒ±cƒ±lara saygƒ±lƒ± olmak
‚Ä¢ Sahte/yasal olmayan √ºr√ºn satmamak

## 3. Yasaklƒ± ƒ∞√ßerikler
‚Ä¢ Yasadƒ±≈üƒ± √ºr√ºnler
‚Ä¢ Sahte markalar
‚Ä¢ Zararlƒ± maddeler
‚Ä¢ Telif hakkƒ± ihlal eden i√ßerikler

## 4. √ñdeme ve ƒ∞adeler
‚Ä¢ √ñdemeler kullanƒ±cƒ±lar arasƒ±nda ger√ßekle≈üir
‚Ä¢ Platform i≈ülem komisyonu alabilir
‚Ä¢ ƒ∞ade politikalarƒ± satƒ±cƒ± tarafƒ±ndan belirlenir

## 5. Hesap Askƒ±ya Alma
Platform, kural ihlali durumunda hesaplarƒ± askƒ±ya alma hakkƒ±nƒ± saklƒ± tutar.

## 6. Deƒüi≈üiklikler
Kullanƒ±m ≈üartlarƒ± √∂nceden bildirimle deƒüi≈ütirilebilir.

ƒ∞leti≈üim: support@eskici.com`;

  fs.writeFileSync(path.join(googlePlayDir, 'terms-of-service.md'), termsOfService);
  console.log('‚úÖ Kullanƒ±m ≈üartlarƒ± hazƒ±rlandƒ±: google-play-assets/terms-of-service.md');
  
  // Create screenshot guide
  const screenshotGuide = `# üì∏ Google Play Store Screenshots Rehberi

## üì± TELEFON SCREENSHOTS (ZORUNLU)
**Gereksinimler:**
- Boyut: 1080x1920 (portrait) veya 1920x1080 (landscape)
- Format: PNG veya JPEG
- Adet: Minimum 2, maksimum 8
- Kalite: Y√ºksek √ß√∂z√ºn√ºrl√ºk, berrak

**√ñnerilen Ekranlar:**
1. **Ana Sayfa** - √úr√ºn listesi grid g√∂r√ºn√ºm√º
2. **√úr√ºn Detay** - Fotoƒüraflar, a√ßƒ±klama, fiyat
3. **Teklif Verme** - Bidding modal a√ßƒ±k
4. **Mesajla≈üma** - Chat ekranƒ±
5. **Profil** - Kullanƒ±cƒ± profil sayfasƒ±
6. **√úr√ºn Ekleme** - Yeni ilan olu≈üturma
7. **AI Tanƒ±ma** - Kamera ile √ºr√ºn tanƒ±ma
8. **Arama** - Kategori ve filtreler

## üìü TABLET SCREENSHOTS (ƒ∞STEƒûE BAƒûLI)
**Gereksinimler:**
- Boyut: 1200+ piksel geni≈ülik
- Format: PNG veya JPEG
- Adet: Minimum 1, maksimum 8

**√ñnerilen Ekranlar:**
1. **Ana Sayfa Grid** - Geni≈ü ekran √ºr√ºn listesi
2. **Split Screen** - √úr√ºn listesi + detay
3. **Dashboard** - Kullanƒ±cƒ± paneli

## üé® SCREENSHOT HAZIRLIK ƒ∞PU√áLARI

### Cihaz Hazƒ±rlƒ±ƒüƒ±
- Telefonun ≈üarjƒ±nƒ± %100 yapƒ±n
- Bildirimlarƒ± temizleyin
- Demo verileri hazƒ±rlayƒ±n
- Yatay/dikey y√∂nlendirmeyi ayarlayƒ±n

### ƒ∞√ßerik Hazƒ±rlƒ±ƒüƒ±
- Ger√ßek√ßi √ºr√ºn fotoƒüraflarƒ± kullanƒ±n
- T√ºrk√ße i√ßerik ekleyin
- √áe≈üitli kategorilerden √∂rnekler
- Kullanƒ±cƒ± avatarlarƒ± ve isimleri

### G√∂rsel Kalite
- Parlak, berrak ekran
- Y√ºksek kontrast
- Doƒüal renkler
- G√∂lge/yansƒ±ma olmamasƒ±

### Yasal Gereksinimler
- Ki≈üisel bilgileri gizleyin
- Telif hakkƒ± olan i√ßerikleri kullanmayƒ±n
- Ger√ßek kullanƒ±cƒ± verilerini maskeleyŸäŸÜ

## üìã KONTROL Lƒ∞STESƒ∞

### √áekim √ñncesi
- [ ] Demo veriler hazƒ±r
- [ ] Uygulama g√ºncel s√ºr√ºmde
- [ ] Cihaz temiz durumda
- [ ] Batarya dolu
- [ ] Bildirimler kapalƒ±

### √áekim Sƒ±rasƒ±
- [ ] Her ekran i√ßin 2-3 varyasyon
- [ ] Farklƒ± i√ßeriklerle test
- [ ] Hem a√ßƒ±k hem koyu tema
- [ ] Loading durumlarƒ± dahil

### √áekim Sonrasƒ±
- [ ] Boyutlarƒ± kontrol et
- [ ] Dosya adlarƒ±nƒ± d√ºzenle
- [ ] Kaliteyi deƒüerlendir
- [ ] Google Play gereksinimlerini kar≈üƒ±la

## üõ†Ô∏è √ñNERƒ∞LEN ARA√áLAR
- **Android:** adb shell screencap
- **iOS:** Simulator screenshots
- **D√ºzenleme:** GIMP, Photoshop, Canva
- **Mockup:** Device frames, Figma templates`;

  fs.writeFileSync(path.join(googlePlayDir, 'screenshot-guide.md'), screenshotGuide);
  console.log('‚úÖ Screenshot rehberi hazƒ±rlandƒ±: google-play-assets/screenshot-guide.md');
  
  // Create final checklist
  const checklist = `# ‚úÖ Google Play Store Yayƒ±nlama Kontrol Listesi

## üì± UYGULAMA VARIKLARI
- [ ] App Icon (512x512 PNG) ‚Üê icon-converter.html ile olu≈ütur
- [ ] Feature Graphic (1024x500) ‚Üê icon-converter.html ile olu≈ütur
- [ ] Telefon Screenshots (2-8 adet)
- [ ] Tablet Screenshots (1-8 adet)

## üìù ƒ∞√áERƒ∞K
- [ ] App Ba≈ülƒ±ƒüƒ± (max 50 karakter): "${appDescriptions.app_title}"
- [ ] Kƒ±sa A√ßƒ±klama (max 80 karakter)
- [ ] Tam A√ßƒ±klama (max 4000 karakter)
- [ ] Yenilikler a√ßƒ±klamasƒ±

## üîí YASAL BELGELER
- [ ] Privacy Policy URL: privacy-policy.md dosyasƒ±nƒ± web'de yayƒ±nla
- [ ] Terms of Service URL: terms-of-service.md dosyasƒ±nƒ± web'de yayƒ±nla

## ‚öôÔ∏è UYGULAMA AYARLARI
- [ ] Kategori: Shopping
- [ ] Hedef Kitle: Teen (13+)
- [ ] ƒ∞√ßerik Derecelendirmesi: Everyone
- [ ] √úlke/B√∂lge: T√ºrkiye

## üîß TEKNƒ∞K GEREKSINIMLER
- [ ] App Bundle (.aab) hazƒ±r
- [ ] ƒ∞mzalƒ± APK
- [ ] Minimum SDK version
- [ ] Target SDK version g√ºncel
- [ ] Permissions listesi

## üéØ MAƒûAZA AYARLARI
- [ ] Pricing: Free/Paid
- [ ] In-app purchases (varsa)
- [ ] Distribution countries
- [ ] Device compatibility

## üìä ANALƒ∞Tƒ∞K
- [ ] Google Analytics entegrasyonu
- [ ] Crash reporting
- [ ] Performance monitoring

## üöÄ SON KONTROLLER
- [ ] T√ºm linkler √ßalƒ±≈üƒ±yor
- [ ] G√∂rseller y√ºklendi
- [ ] A√ßƒ±klamalar eksiksiz
- [ ] Yasal belgeler eri≈üilebilir
- [ ] App bundle test edildi

## üìû DESTEK HAZIRLIƒûI
- [ ] Support email aktif
- [ ] Documentation hazƒ±r
- [ ] FAQ sayfasƒ±
- [ ] User feedback sistemi

Bu listeyi tamamladƒ±ktan sonra Google Play Console'da "Review" butonuna basabilirsiniz!`;

  fs.writeFileSync(path.join(googlePlayDir, 'CHECKLIST.md'), checklist);
  console.log('‚úÖ Kontrol listesi hazƒ±rlandƒ±: google-play-assets/CHECKLIST.md');
  
  console.log('\nüéâ Google Play Store varlƒ±klarƒ± hazƒ±r!');
  console.log('\nüìÅ Olu≈üturulan dosyalar:');
  console.log('  üì± icon-converter.html - Icon ve feature graphic olu≈üturucu');
  console.log('  üìù app-descriptions.json - T√ºrk√ße a√ßƒ±klamalar');
  console.log('  üîí privacy-policy.md - Gizlilik politikasƒ±');
  console.log('  üìú terms-of-service.md - Kullanƒ±m ≈üartlarƒ±');
  console.log('  üì∏ screenshot-guide.md - Screenshot √ßekme rehberi');
  console.log('  ‚úÖ CHECKLIST.md - Yayƒ±nlama kontrol listesi');
  console.log('  üñºÔ∏è original-icon.png - Referans icon');
  
  console.log('\nüöÄ Sonraki adƒ±mlar:');
  console.log('  1. icon-converter.html dosyasƒ±nƒ± tarayƒ±cƒ±da a√ß');
  console.log('  2. Icon ve feature graphic olu≈ütur');
  console.log('  3. Screenshots √ßek (screenshot-guide.md rehberini kullan)');
  console.log('  4. Privacy policy ve terms\'i web\'de yayƒ±nla');
  console.log('  5. Google Play Console\'a y√ºkle');
}

createGooglePlayAssets();